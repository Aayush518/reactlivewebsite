"use strict";var e=require("@babel/runtime/helpers/extends"),t=require("react"),r=require("three"),a=require("@react-three/fiber"),i=require("react-merge-refs"),n=require("../materials/BlurPass.cjs.js"),s=require("../materials/MeshReflectorMaterial.cjs.js");function o(e){var t=Object.create(null);return e&&Object.keys(e).forEach((function(r){if("default"!==r){var a=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,a.get?a:{enumerable:!0,get:function(){return e[r]}})}})),t.default=e,Object.freeze(t)}require("../materials/ConvolutionMaterial.cjs.js");var l=o(t);a.extend({MeshReflectorMaterialImpl:s.MeshReflectorMaterial});const u=l.forwardRef((({mixBlur:t=0,mixStrength:s=1,resolution:o=256,blur:u=[0,0],minDepthThreshold:d=.9,maxDepthThreshold:c=1,depthScale:p=0,depthToBlurRatioBias:m=.25,mirror:h=0,distortion:x=1,mixContrast:f=1,distortionMap:M,reflectorOffset:T=0,...S},y)=>{const w=a.useThree((({gl:e})=>e)),b=a.useThree((({camera:e})=>e)),R=a.useThree((({scene:e})=>e)),g=(u=Array.isArray(u)?u:[u,u])[0]+u[1]>0,v=l.useRef(null),[D]=l.useState((()=>new r.Plane)),[j]=l.useState((()=>new r.Vector3)),[B]=l.useState((()=>new r.Vector3)),[U]=l.useState((()=>new r.Vector3)),[O]=l.useState((()=>new r.Matrix4)),[P]=l.useState((()=>new r.Vector3(0,0,-1))),[V]=l.useState((()=>new r.Vector4)),[E]=l.useState((()=>new r.Vector3)),[F]=l.useState((()=>new r.Vector3)),[W]=l.useState((()=>new r.Vector4)),[_]=l.useState((()=>new r.Matrix4)),[q]=l.useState((()=>new r.PerspectiveCamera)),I=l.useCallback((()=>{var e;const t=v.current.parent||(null==(e=v.current)?void 0:e.__r3f.parent);if(!t)return;if(B.setFromMatrixPosition(t.matrixWorld),U.setFromMatrixPosition(b.matrixWorld),O.extractRotation(t.matrixWorld),j.set(0,0,1),j.applyMatrix4(O),B.addScaledVector(j,T),E.subVectors(B,U),E.dot(j)>0)return;E.reflect(j).negate(),E.add(B),O.extractRotation(b.matrixWorld),P.set(0,0,-1),P.applyMatrix4(O),P.add(U),F.subVectors(B,P),F.reflect(j).negate(),F.add(B),q.position.copy(E),q.up.set(0,1,0),q.up.applyMatrix4(O),q.up.reflect(j),q.lookAt(F),q.far=b.far,q.updateMatrixWorld(),q.projectionMatrix.copy(b.projectionMatrix),_.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),_.multiply(q.projectionMatrix),_.multiply(q.matrixWorldInverse),_.multiply(t.matrixWorld),D.setFromNormalAndCoplanarPoint(j,B),D.applyMatrix4(q.matrixWorldInverse),V.set(D.normal.x,D.normal.y,D.normal.z,D.constant);const r=q.projectionMatrix;W.x=(Math.sign(V.x)+r.elements[8])/r.elements[0],W.y=(Math.sign(V.y)+r.elements[9])/r.elements[5],W.z=-1,W.w=(1+r.elements[10])/r.elements[14],V.multiplyScalar(2/V.dot(W)),r.elements[2]=V.x,r.elements[6]=V.y,r.elements[10]=V.z+1,r.elements[14]=V.w}),[b,T]),[C,k,L,z]=l.useMemo((()=>{const e={minFilter:r.LinearFilter,magFilter:r.LinearFilter,type:r.HalfFloatType},a=new r.WebGLRenderTarget(o,o,e);a.depthBuffer=!0,a.depthTexture=new r.DepthTexture(o,o),a.depthTexture.format=r.DepthFormat,a.depthTexture.type=r.UnsignedShortType;const i=new r.WebGLRenderTarget(o,o,e);return[a,i,new n.BlurPass({gl:w,resolution:o,width:u[0],height:u[1],minDepthThreshold:d,maxDepthThreshold:c,depthScale:p,depthToBlurRatioBias:m}),{mirror:h,textureMatrix:_,mixBlur:t,tDiffuse:a.texture,tDepth:a.depthTexture,tDiffuseBlur:i.texture,hasBlur:g,mixStrength:s,minDepthThreshold:d,maxDepthThreshold:c,depthScale:p,depthToBlurRatioBias:m,distortion:x,distortionMap:M,mixContrast:f,"defines-USE_BLUR":g?"":void 0,"defines-USE_DEPTH":p>0?"":void 0,"defines-USE_DISTORTION":M?"":void 0}]}),[w,u,_,o,h,g,t,s,d,c,p,m,x,M,f]);return a.useFrame((()=>{var e;const t=v.current.parent||(null==(e=v.current)?void 0:e.__r3f.parent);if(!t)return;t.visible=!1;const r=w.xr.enabled,a=w.shadowMap.autoUpdate;I(),w.xr.enabled=!1,w.shadowMap.autoUpdate=!1,w.setRenderTarget(C),w.state.buffers.depth.setMask(!0),w.autoClear||w.clear(),w.render(R,q),g&&L.render(w,C,k),w.xr.enabled=r,w.shadowMap.autoUpdate=a,t.visible=!0,w.setRenderTarget(null)})),l.createElement("meshReflectorMaterialImpl",e({attach:"material",key:"key"+z["defines-USE_BLUR"]+z["defines-USE_DEPTH"]+z["defines-USE_DISTORTION"],ref:i([v,y])},z,S))}));exports.MeshReflectorMaterial=u;
