"use strict";var e=require("@babel/runtime/helpers/extends"),r=require("react"),t=require("three-stdlib"),n=require("three");function u(e){var r=Object.create(null);return e&&Object.keys(e).forEach((function(t){if("default"!==t){var n=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,n.get?n:{enumerable:!0,get:function(){return e[t]}})}})),r.default=e,Object.freeze(r)}var c=u(r);function o(e,r=16,u,o,l){const[a,i]=c.useState((()=>{const e=Array.from({length:r},(()=>[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])).flat();return new n.InstancedBufferAttribute(Float32Array.from(e),16)}));return c.useLayoutEffect((()=>{if(void 0===e.current)return;const c=new t.MeshSurfaceSampler(e.current);o&&c.setWeightAttribute(o),c.build();const s=new n.Vector3,f=new n.Vector3,d=new n.Color,p=new n.Object3D;e.current.updateMatrixWorld(!0);for(let t=0;t<r;t++)c.sample(s,f,d),"function"==typeof u?u({dummy:p,sampledMesh:e.current,position:s,normal:f,color:d},t):p.position.copy(s),p.updateMatrix(),null!=l&&l.current&&l.current.setMatrixAt(t,p.matrix),p.matrix.toArray(a.array,16*t);null!=l&&l.current&&(l.current.instanceMatrix.needsUpdate=!0),a.needsUpdate=!0,i(a.clone())}),[e,l,o,r,u]),a}exports.Sampler=function({children:r,weight:t,transform:n,instances:u,mesh:l,count:a=16,...i}){const s=c.useRef(null),f=c.useRef(null),d=c.useRef(null);return c.useLayoutEffect((()=>{var e,r;f.current=null!==(e=null==u?void 0:u.current)&&void 0!==e?e:s.current.children.find((e=>e.hasOwnProperty("instanceMatrix"))),d.current=null!==(r=null==l?void 0:l.current)&&void 0!==r?r:s.current.children.find((e=>"Mesh"===e.type))}),[r,null==l?void 0:l.current,null==u?void 0:u.current]),o(d,a,n,t,f),c.createElement("group",e({ref:s},i),r)},exports.useSurfaceSampler=o;
