"use strict";var e=require("react"),r=require("@react-three/fiber"),t=require("three-stdlib");function n(e){var r=Object.create(null);return e&&Object.keys(e).forEach((function(t){if("default"!==t){var n=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,n.get?n:{enumerable:!0,get:function(){return e[t]}})}})),r.default=e,Object.freeze(r)}var c=n(e);const u=c.forwardRef((({intensity:e=1,decay:n,decayRate:u=.65,maxYaw:a=.1,maxPitch:i=.1,maxRoll:s=.1,yawFrequency:o=.1,pitchFrequency:l=.1,rollFrequency:f=.1},m)=>{const d=r.useThree((e=>e.camera)),p=r.useThree((e=>e.controls)),y=c.useRef(e),h=c.useRef(d.rotation.clone()),[b]=c.useState((()=>new t.SimplexNoise)),[v]=c.useState((()=>new t.SimplexNoise)),[w]=c.useState((()=>new t.SimplexNoise)),x=()=>{(y.current<0||y.current>1)&&(y.current=y.current<0?0:1)};return c.useImperativeHandle(m,(()=>({getIntensity:()=>y.current,setIntensity:e=>{y.current=e,x()}})),[]),c.useEffect((()=>{if(p){const e=()=>{h.current=d.rotation.clone()};return p.addEventListener("change",e),e(),()=>{p.removeEventListener("change",e)}}}),[d,p]),r.useFrame(((e,r)=>{const t=Math.pow(y.current,2),c=a*t*b.noise(e.clock.elapsedTime*o,1),m=i*t*v.noise(e.clock.elapsedTime*l,1),p=s*t*w.noise(e.clock.elapsedTime*f,1);d.rotation.set(h.current.x+m,h.current.y+c,h.current.z+p),n&&y.current>0&&(y.current-=u*r,x())})),null}));exports.CameraShake=u;
